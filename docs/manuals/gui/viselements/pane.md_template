A side pane.

Pane allows showing some content on top of the current page.
The pane is closed when the user clicks outside the area of the pane (triggering a *on_close*
action).

Pane is a block control.

# Styling

All the pane blocks are generated with the "taipy-pane" CSS class. You can use this class
name to select the pane blocks on your page and apply style.

# Usage

## Showing or hiding a pane

The default property, [*open*](#p-open), indicates whether the pane is visible or not:
!!! taipy-element
    default={show}

## Choosing where the pane appears

The [*anchor*](#p-anchor) property defines on which side of the display the pane is shown.

!!! taipy-element
    default={show}
    anchor=left

## Showing the pane beside the page content

The pane is shown beside the page content instead of over it if the [*persistent*](#p-persistent)
property evaluates to True.

The parent element must have the *flex* display mode in CSS. To achieve this using
the Markdown syntax, you can leverage the
[*d-flex* class](../styling/stylekit.md#c-d-flex) provided in the
[Stylekit](../styling/stylekit.md).

Here is a full example of how to do this:
```python
from taipy.gui import Gui

show_pane=True

page="""
<|d-flex|
<|{show_pane}|pane|persistent|width=100px|
Pane content
|>
This button can be pressed to open the persistent pane:
<|Open|button|on_action={lambda s: s.assign("show_pane", True)}|>
|>
"""

Gui(page=page).run()
```

The pane is initially opened. If you close it, the bound variable [*show_pane*](#p-show_pane) is
updated (set to False).<br/>
Pressing the button sets the variable [*show_pane*](#p-show_pane) to True using a lambda callback,
which opens the pane again.

## Pane as block element

The content of the pane can be specified directly inside the pane block.

!!! example "Definition"

    === "Markdown"

        ```
        <|{show}|pane|
        ...
        <|{some_content}|>
        ...
        |>
        ```
  
    === "HTML"

        ```html
        <taipy:pane open={show}>
            ...
            <taipy:text>{some_content}</taipy:text>
            ...
        </taipy:pane>
        ```

    === "Python"

        ```python
        import taipy.gui.builder as tgb
        ...
        with tgb.pane("{show}")
            tgb.text("{some_content}")
        ```

## Pane with page

The content of the pane can be specified as an existing page name using the [*page*](#p-page)
property.

!!! taipy-element
    default={show}
    page=page_name

## Pane with partial

The content of the pane can be specified as a `Partial^` instance using the
[*partial*](#p-partial) property.

!!! taipy-element
    default={show}
    partial={partial}
